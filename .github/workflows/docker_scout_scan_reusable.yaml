# .github/workflows/docker_scout_scan_reusable.yaml
name: Docker Scout Security Scan (Reusable)

on:
  workflow_call:
    inputs:
      image_to_scan:
        required: true
        type: string
        description: "The Docker image name to scan (e.g., 'my-app:latest')"
      scan_type:
        required: false
        type: string
        default: "cves"
        description: "Type of Docker Scout scan ('cves', 'quickview', 'sbom')"
      upload_sarif:
        required: false
        type: boolean
        default: true
        description: "Whether to upload SARIF results to GitHub Security tab"

    outputs:
      scan_status:
        description: "Status of the Docker Scout scan job"
        value: ${{ jobs.scan.status }} # Corregido: Uso directo de jobs.scan.status

jobs:
  scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx (includes Docker Scout)
        # ESTE ES EL ÚNICO PASO NECESARIO PARA INSTALAR DOCKER Y DOCKER SCOUT
        uses: docker/setup-buildx-action@v3

      # ELIMINAR COMPLETAMENTE EL SIGUIENTE BLOQUE SI TODAVÍA EXISTE:
      #- name: Install Docker Scout CLI
      #  run: |
      #    curl -sL https://download.docker.com/linux/static/stable/x86_64/docker-scout-linux-amd64.tar.gz -o docker-scout.tar.gz
      #    tar -xf docker-scout.tar.gz
      #    sudo mv docker-scout /usr/local/bin/

      # ELIMINAR COMPLETAMENTE EL SIGUIENTE BLOQUE SI TODAVÍA EXISTE:
      #- name: Ensure Docker Scout is installed and available
      #  run: |
      #    docker scout version || { echo "Error: Docker Scout is not installed or not in PATH."; exit 1; }

      - name: Run Docker Scout Scan (${{ inputs.scan_type }})
        id: scout_scan
        # Corrección: El "Nested mappings" era un error de VSCode/YAML Linter,
        # la estructura que te di era correcta, pero el error "Invalid workflow file"
        # en la línea 50 indica que algo se rompió en la copia.
        # Asegúrate de que `run: |` esté en su propia línea y el contenido debajo
        # tenga la indentación adecuada.
        run: |
          REPORT_FILE=""
          echo "Running docker scout ${{ inputs.scan_type }} for image: ${{ inputs.image_to_scan }}"
          case "${{ inputs.scan_type }}" in
            cves)
              # ELIMINADO: --exit-code, no es un flag válido para 'docker scout cves'
              docker scout cves ${{ inputs.image_to_scan }} --format sarif > "scout-report-cves.sarif" || true
              REPORT_FILE="scout-report-cves.sarif"
              ;;
            quickview)
              docker scout quickview ${{ inputs.image_to_scan }} --format json > scout-quickview.json
              echo "Docker Scout Quickview report generated as scout-quickview.json"
              REPORT_FILE="scout-quickview.json"
              ;;
            sbom)
              docker scout sbom ${{ inputs.image_to_scan }} --format json > scout-sbom.json
              echo "Docker Scout SBOM report generated as scout-sbom.json"
              REPORT_FILE="scout-sbom.json"
              ;;
            *)
              echo "Unsupported scan_type: ${{ inputs.scan_type }}"
              exit 1
              ;;
          esac
          echo "SCANTYPE_REPORT_FILE=${REPORT_FILE}" >> $GITHUB_OUTPUT

      - name: Upload Docker Scout SARIF results to GitHub Security tab
        if: ${{ success() && inputs.upload_sarif && endsWith(steps.scout_scan.outputs.SCANTYPE_REPORT_FILE, '.sarif') }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.scout_scan.outputs.SCANTYPE_REPORT_FILE }}
          category: "docker-scout-scan-${{ inputs.scan_type }}"

      - name: Upload Docker Scout report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: docker-scout-report-${{ inputs.scan_type }}
          path: |
            ${{ steps.scout_scan.outputs.SCANTYPE_REPORT_FILE }}
            scout-quickview.json
            scout-sbom.json