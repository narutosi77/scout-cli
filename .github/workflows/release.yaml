name: Create GitHub Release

on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get the tag name
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Create dist directory
        run: mkdir -p dist

      - name: Build CLI Binaries (from root)
        run: |
          # CLI Principal
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o ./dist/scout-cli-linux-amd64 .
          CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o ./dist/scout-cli-windows-amd64.exe .
          CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o ./dist/scout-cli-darwin-amd64 .
          CGO_ENABLED=0 GOOS=linux GOARCH=arm64 go build -o ./dist/scout-cli-linux-arm64 .
          CGO_ENABLED=0 GOOS=darwin GOARCH=arm64 go build -o ./dist/scout-cli-darwin-arm64 .

      - name: Build Plugin Binary
        run: |
          cd plugin
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o ../dist/scout-plugin-linux-amd64 main.go

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            ## Docker Scout CLI ${{ steps.get_version.outputs.VERSION }}

            ### Binarios Disponibles
            - Linux AMD64: `scout-cli-linux-amd64`
            - Windows AMD64: `scout-cli-windows-amd64.exe`
            - macOS AMD64: `scout-cli-darwin-amd64`
            - Linux ARM64: `scout-cli-linux-arm64`
            - macOS ARM64: `scout-cli-darwin-arm64`
            - Plugin: `scout-plugin-linux-amd64`

          files: ./dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}