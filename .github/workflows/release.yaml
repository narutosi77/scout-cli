# .github/workflows/release.yaml
name: Create GitHub Release

on:
  push:
    tags:
      - 'v*' # Se activa cuando se empuja un tag que comienza con 'v' (ej. v1.0.0, v2.0.1)

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Necesario para crear un Release

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get the tag name
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Build and Package CLI Binaries
        # Llama al workflow reutilizable para compilar y empaquetar los binarios
        # Se pasa el tag para que el workflow de binarios lo use para nombrar.
        uses: ./.github/workflows/release_cli_binaries.yaml # Ruta relativa dentro del mismo repo
        id: build_binaries
        with:
          tag: ${{ steps.get_version.outputs.VERSION }}
          # Si release_cli_binaries necesita secretos, podrías pasar:
          # secrets: inherit # Para pasar automáticamente todos los secretos del repo

      - name: Download compiled binaries artifact
        uses: actions/download-artifact@v4
        with:
          name: cli-binaries-${{ steps.get_version.outputs.VERSION }} # Nombre del artefacto creado en release_cli_binaries.yaml
          path: ./dist # Descargar en la carpeta 'dist' local

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ steps.get_version.outputs.VERSION }}
          name: Release ${{ steps.get_version.outputs.VERSION }}
          body: |
            ## Novedades en ${{ steps.get_version.outputs.VERSION }}

            * Primera versión estable de Docker Scout CLI.
            * (Añadir aquí tus notas de lanzamiento)

          draft: false # Si quieres que sea un borrador para revisión
          prerelease: false # Si es una versión pre-lanzamiento (ej. beta)
          files: ./dist/* # Adjuntar todos los archivos de la carpeta 'dist' al release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Token automático de GitHub Actions