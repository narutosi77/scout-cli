# .github/workflows/trivy_security_scan.yaml
name: Trivy Security Scan (Public Image Test)

on:
  push:
    branches:
      - main
    paths:
      - 'Dockerfile'
      - '.github/workflows/trivy_security_scan.yaml'
  workflow_dispatch:
    inputs:
      image:
        description: 'Image to scan (e.g., my-app:latest)'
        required: true
        default: 'nginx:latest'

jobs:
  scan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build My CLI/Plugin Image for Scan
        run: docker build -t my-cli-image:latest -f Dockerfile .

      - name: Run Trivy vulnerability scan on Image
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: my-cli-image:latest
          format: 'sarif'
          output: 'trivy-report.sarif'
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'

      - name: Check if SARIF file exists
        id: check_sarif
        run: |
          if [ -f "trivy-report.sarif" ]; then
            echo "sarif_exists=true" >> $GITHUB_OUTPUT
          else
            echo "sarif_exists=false" >> $GITHUB_OUTPUT
          fi

      - name: Upload Trivy scan results to GitHub Security tab
        if: steps.check_sarif.outputs.sarif_exists == 'true'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-report.sarif
          category: 'trivy-security-scan'

      - name: Upload Trivy report artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: trivy-sarif-report
          path: trivy-report.sarif